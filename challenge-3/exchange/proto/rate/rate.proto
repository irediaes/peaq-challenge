syntax = "proto3";

option go_package="github.com/ebikode/peaq-challenge/challenge-3/exchange/proto/rate;rate";
package rate;


import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = { 
  info: {
    title: "Peaq Challenge API DOc"
    description: "Analytics of Cryto-Currency Exchange Rates"
    version: "1.0"
    contact: {
      name: "Iredia"
      url: "https://github.com/ebikode/peaq-challenge"
      email: "sammyrogers2010@gmail.com"
    }
  }
  schemes: HTTPS
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
  responses: {
    key: "400"
    value: {
      description: "Returned when the user does not send a valid request."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
};


service RateService {
    // Fetch Growth Records
    // Fetch all Growth record data in five minutes interval
    rpc GetGrowthRecords(GetRequest) returns (Response){
      option (google.api.http) = {
            get: "/export/analytics"
        };
      option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
        tags: "Analytics"
      };
    };
}

message Rate {
    int32 id = 1;
    string market_name = 2;
    string high = 3;
    string low = 4;
    string volume = 5;
    string timestamp = 6;
}

message GrowthRecord {
    int32 id = 1;
    int32 from_rate_id = 2;
    int32 to_rate_id = 3;
    string volume_growth = 4;
    string high_growth = 5;
    string low_growth = 6;
    int64 from = 7;
    int64 to = 8;
    Rate from_rate = 9;
    Rate to_rate = 10;
}

message GrowthData {
    string volume_growth = 1;
    string high_growth = 2;
    string low_growth = 3;
}

// Created a blank get request
message GetRequest {
    // swagger:ignore
    int64 from_timestamp = 1;
    // swagger:ignore
    int64 to_timestamp = 2;
    // from={yyyy-mm-ddThh:mm:ss}
    string from = 3;
    // to={yyyy-mm-ddThh:mm:ss}
    string to = 4;
    // format=json
    string format = 5;
}

message Response {
    repeated GrowthRecord growth_records = 1;
    repeated ResponseData data = 2;
}

message ResponseData {
    string from = 1;
    string to = 2;
    repeated ResponseMarketData market_data= 3;
}
    
message ResponseMarketData {
    string market_pair = 1;
    GrowthData growth_data = 2;
}
